kind: Pod
apiVersion: v1
metadata:
  name: etl

spec:
  volumes:
    # To create the credentials config run --
    # kubectl create configmap gen3-credentials --from-file Secrets
    - name: gen3-credentials
      configMap:
        name: gen3-credentials

    - name: sheepdog-dbcreds
      secret:
        secretName: sheepdog-dbcreds

    - name: useryaml
      configMap:
        name: useryaml

    - name: studies-mount
      hostPath:
        path: /Users/walsbr/aced/data_model/studies

    - name: output-mount
      hostPath:
        path: /Users/walsbr/aced/data_model/output

  containers:
    - name: container-configmap
      image: quay.io/ohsu-comp-bio/aced-etl:development
      imagePullPolicy: Always
      volumeMounts:
        # Gen3 credentials file
        - name: gen3-credentials
          mountPath: /creds/credentials.json
          subPath: credentials.json

        # Sheepdog creds, secrets defined in helm/sheepdog/templates/deployment.yaml
        - name: sheepdog-dbcreds
          mountPath: /creds/sheepdog-creds

        # User yaml, configmap defined in helm/fence/templates/useryaml-job.yaml
        - name: useryaml
          mountPath: /creds/user.yaml
          subPath: useryaml

        # studies metadata
        - name: studies-mount
          mountPath: /studies

        # studies files
        - name: output-mount
          mountPath: /output

      command: ["/bin/bash" ]
      args:
        - "-c"
        - |
          # Until we fix in helm env, setup well known postgres env variables
          # TODO - set GLOBAL_HOSTNAME to value from values.yaml
          cat  << EOF >> ~/.bashrc
          export PGDB=`cat /creds/sheepdog-creds/database`
          export PGPASSWORD=`cat /creds/sheepdog-creds/password`
          export PGUSER=`cat /creds/sheepdog-creds/username`
          export PGHOST=`cat /creds/sheepdog-creds/host`
          export DBREADY=`cat /creds/sheepdog-creds/dbcreated`
          export PGPORT=`cat /creds/sheepdog-creds/port`
          EOF

          # link back to mounted volumes
          ln -s /studies /data_model/studies
          ln -s /output /data_model/output

          echo "Done setting up data_model"

          # link back to mounted volumes
          ln -s /studies /data_model/studies
          ln -s /output /data_model/output

          echo "Done setting up data_model"

          # For development purposes, extends the lifespan of the pod to let us exec into it.
          while true; do sleep 30; done;

  # TODO - read nodegroup from values.yaml
  #nodeSelector:
  #      eks.amazonaws.com/nodegroup: aced-commons-development-etl-node-group-large
