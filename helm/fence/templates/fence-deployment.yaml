apiVersion: apps/v1
kind: Deployment
metadata:
  name: fence-deployment
  labels:
    {{- include "fence.labels" . | nindent 4 }}
    {{- if .Values.global.ddEnabled }}
    {{- include "common.datadogLabels" . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "fence.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fence.selectorLabels" . | nindent 8 }}
        {{- if .Values.global.ddEnabled }}
        {{- include "common.datadogLabels" . | nindent 8 }}
        {{- end }}
    spec:
      enableServiceLinks: false
      serviceAccountName: {{ include "fence.serviceAccountName" . }}
      {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      {{- end }}
      volumes:
        {{- toYaml .Values.volumes | nindent 8 }}
      containers:
        - name: fence
          {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
          image: "quay.io/cdis/fence:feat_gunicorn"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
            - name: app
              containerPort: 8000
              protocol: TCP
            {{- else }}
            - name: http
              containerPort: 80
              protocol: TCP
            {{- end }}
            - name: container
              containerPort: 6567
          livenessProbe:
            httpGet:
              path: /_status
              {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
              port: app
              {{- else }}
              port: http
              {{- end }}
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /_status
              {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
              port: app
              {{- else }}
              port:http
              {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command: ["/bin/bash"]
          args:
            - "-c"
            - |
              python /var/www/fence/yaml_merge.py /var/www/fence/fence-config-public.yaml /var/www/fence/fence-config-secret.yaml /var/www/fence/fence-config.yaml
              if [[ -f /fence/keys/key/jwt_private_key.pem ]]; then
                openssl rsa -in /fence/keys/key/jwt_private_key.pem -pubout > /fence/keys/key/jwt_public_key.pem
              fi
              bash /fence/dockerrun.bash && if [[ -f /dockerrun.sh ]]; then bash /dockerrun.sh; fi
          env:
            {{- if .Values.global.ddEnabled }}
            {{- include "common.datadogEnvVar" . | nindent 12 }}
            {{- end }}
            {{- toYaml .Values.env | nindent 12 }}
          volumeMounts:
            {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
            - name: wsgi-config
              configMap:
                name: fence-wsgi
            {{- end }}
            {{- toYaml .Values.volumeMounts | nindent 12 }}
        {{- if .Values.secureImage.sidecar.enabled | default .Values.global.secureImage.sidecar.enabled }}
        - name: sidecar-nginx
          image: "{{ .Values.secureImage.sidecar.image }}:{{ .Values.secureImage.sidecar.tag }}"
          imagePullPolicy: {{ .Values.secureImage.sidecar.pullPolicy }}
          ports:
            - name: app
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /_status
              port: app
          volumeMounts:
            - name: "nginx-config"
              mountPath: "/etc/nginx/conf.d/default.conf"
              subPath: default.conf
        {{- end }}
      initContainers:
        - name: fence-init
          {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
          image: "quay.io/cdis/fence:feat_gunicorn"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
            - name: app
              containerPort: 8000
              protocol: TCP
            {{- else }}
            - name: http
              containerPort: 80
              protocol: TCP
            {{- end }}
            - name: container
              containerPort: 6567
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command: ["/bin/bash"]
          args:
            - "-c"
            - |
              python /var/www/fence/yaml_merge.py /var/www/fence/fence-config-public.yaml /var/www/fence/fence-config-secret.yaml /var/www/fence/fence-config.yaml
              if fence-create migrate --help > /dev/null 2>&1; then
                if ! grep -E 'ENABLE_DB_MIGRATION"?: *false' /var/www/fence/fence-config.yaml; then
                  echo "Running db migration: fence-create migrate"
                  cd /fence
                  fence-create migrate
                else
                  echo "Db migration disabled in fence-config"
                fi
              else
                echo "Db migration not available in this version of fence"
              fi
          volumeMounts:
            {{- toYaml .Values.initVolumeMounts | nindent 12 }}
          env:
            {{ toYaml .Values.initEnv | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}