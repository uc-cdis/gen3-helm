{{ if .Values.global.externalSecrets.deploy }}
{{- if not .Values.externalSecrets.createK8sJwtKeysSecret}}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: fence-jwt-keys
spec:
  refreshInterval: 5m
  secretStoreRef:
  {{- if ne .Values.global.externalSecrets.clusterSecretStoreRef  "" }}
    name: {{ .Values.global.externalSecrets.clusterSecretStoreRef }}
    kind: ClusterSecretStore
  {{- else }}
    name: {{include "common.SecretStore" .}}
    kind: SecretStore
  {{- end  }}
  target:
    name: fence-jwt-keys
    creationPolicy: Owner
  data:
  - secretKey: jwt_private_key.pem
    remoteRef:
      #name of secret in secrets manager
      key: {{include "fence-jwt-keys" .}}
{{- end }}
{{- if not .Values.externalSecrets.createK8sGoogleAppSecrets}}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: fence-google-app-creds-secret
spec:
  refreshInterval: 5m
  secretStoreRef:
   {{- if ne .Values.global.externalSecrets.clusterSecretStoreRef  "" }}
    name: {{ .Values.global.externalSecrets.clusterSecretStoreRef }}
    kind: ClusterSecretStore
  {{- else }}
    name: {{include "common.SecretStore" .}}
    kind: SecretStore
  {{- end  }}
  target:
    name: fence-google-app-creds-secret
    creationPolicy: Owner
  data:
  - secretKey: fence_google_app_creds_secret.json
    remoteRef:
      property: fence_google_app_creds_secret.json
      #name of secret in secrets manager
      key: {{include "fence-google-app-creds-secret" .}}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: fence-google-storage-creds-secret
spec:
  refreshInterval: 5m
  secretStoreRef:
  {{- if ne .Values.global.externalSecrets.clusterSecretStoreRef  "" }}
    name: {{ .Values.global.externalSecrets.clusterSecretStoreRef }}
    kind: ClusterSecretStore
  {{- else }}
    name: {{include "common.SecretStore" .}}
    kind: SecretStore
  {{- end  }}
  target:
    name: fence-google-storage-creds-secret
    creationPolicy: Owner
  data:
  - secretKey: fence_google_storage_creds_secret.json
    remoteRef:
      property: fence_google_storage_creds_secret.json
      #name of secret in secrets manager
      key: {{include "fence-google-storage-creds-secret" .}}
{{- end }}
{{- if not .Values.externalSecrets.createK8sFenceConfigSecret}}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: fence-config
spec:
  refreshInterval: 5m
  secretStoreRef:
   {{- if ne .Values.global.externalSecrets.clusterSecretStoreRef  "" }}
    name: {{ .Values.global.externalSecrets.clusterSecretStoreRef }}
    kind: ClusterSecretStore
  {{- else }}
    name: {{include "common.SecretStore" .}}
    kind: SecretStore
  {{- end  }}
  target:
    name: fence-config
    creationPolicy: Owner
  data:
  - secretKey: fence-config.yaml
    remoteRef:
      #name of secret in secrets manager
      key: {{include "fence-config" .}}
{{- if .Values.usersync.syncFromDbgap }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: fence-ssh-keys
spec:
  refreshInterval: 5m
  secretStoreRef:
   {{- if ne .Values.global.externalSecrets.clusterSecretStoreRef  "" }}
    name: {{ .Values.global.externalSecrets.clusterSecretStoreRef }}
    kind: ClusterSecretStore
  {{- else }}
    name: {{include "common.SecretStore" .}}
    kind: SecretStore
  {{- end  }}
  target:
    name: fence-ssh-keys
    creationPolicy: Owner
  data:
  - secretKey: id_rsa
    remoteRef:
      key: {{include "fence-ssh-keys" .}}
      property: id_rsa
  - secretKey: id_rsa.pub
    remoteRef:
      key: {{include "fence-ssh-keys" .}}
      property: id_rsa.pub
{{- end }}
{{- end }}
---
{{- if and (.Values.global.externalSecrets.deploy) (not .Values.global.externalSecrets.dbCreate) }}
{{ include "common.externalSecret.db" . }}
{{- end}}
{{- end}}