apiVersion: apps/v1
kind: Deployment
metadata:
  name: gen3-user-data-library-deployment
  labels:
    {{- include "gen3-user-data-library.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gen3-user-data-library.selectorLabels" . | nindent 6 }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "gen3-user-data-library.selectorLabels" . | nindent 8 }}
        {{- include "common.extraLabels" . | nindent 8 }}
        # gen3 networkpolicy labels
        netnolimit: 'yes'
        public: 'yes'
        userhelper: 'yes'
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- $metricsEnabled := .Values.metricsEnabled }}
      {{- if eq $metricsEnabled nil }}
        {{- $metricsEnabled = .Values.global.metricsEnabled }}
      {{- end }}
      {{- if eq $metricsEnabled nil }}
        {{- $metricsEnabled = true }}
      {{- end }}

      {{- if $metricsEnabled }}
        {{- include "common.grafanaAnnotations" . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      volumes:
        - name: gen3-user-data-library-g3auto-volume
          secret:
            secretName: gen3userdatalibrary-g3auto
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            {{- toYaml .Values.env | nindent 12 }}
            - name: URL_PREFIX
              value: '/library'
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: gen3-user-data-library-dbcreds
                  key: host
                  optional: false
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: gen3-user-data-library-dbcreds
                  key: username
                  optional: false
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gen3-user-data-library-dbcreds
                  key: password
                  optional: false
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: gen3-user-data-library-dbcreds
                  key: database
                  optional: false
            - name: DBREADY
              valueFrom:
                secretKeyRef:
                  name: gen3-user-data-library-dbcreds
                  key: dbcreated
                  optional: false
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 80
              name: http
          livenessProbe:
            httpGet:
              path: /_status
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /_status
              port: 80
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      initContainers:
        - name: gen3-user-data-library-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: GEN3_DEBUG
              value: "False"
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: gen3-user-data-library-dbcreds
                  key: host
                  optional: false
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: gen3-user-data-library-dbcreds
                  key: username
                  optional: false
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gen3-user-data-library-dbcreds
                  key: password
                  optional: false
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: gen3-user-data-library-dbcreds
                  key: database
                  optional: false
            - name: DBREADY
              valueFrom:
                secretKeyRef:
                  name: gen3-user-data-library-dbcreds
                  key: dbcreated
                  optional: false

          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command: [ "/bin/sh" ]
          args:
            - "-c"
            - |
              # Managing virtual environments via poetry instead of python since the AL base image update, but retaining backwards compatibility
              printenv
              poetry run alembic upgrade head || /env/bin/alembic upgrade head