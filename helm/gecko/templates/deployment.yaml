apiVersion: apps/v1
kind: Deployment
metadata:
  name: gecko-deployment
  labels:
    {{- include "gecko.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "gecko.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gecko.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gecko.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 80
          readinessProbe:
            httpGet:
              path: /health
              port: 80
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command: ["sh"]
          args:
            - "-c"
            - |
              set -e
              # set env vars
              #until false; do
              #  sleep 5
              # done
              ./bin/gecko

          env:
            {{- toYaml .Values.env | nindent 12 }}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: gecko-dbcreds
                  key: password
                  optional: false
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: gecko-dbcreds
                  key: username
                  optional: false
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: gecko-dbcreds
                  key: database
                  optional: false
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: gecko-dbcreds
                  key: host
                  optional: false
            - name: PGPORT
              valueFrom:
                secretKeyRef:
                  name: gecko-dbcreds
                  key: port
                  optional: false
            - name: PGSSLMODE
              value: disable
            - name: DBREADY
              valueFrom:
                secretKeyRef:
                  name: gecko-dbcreds
                  key: dbcreated
                  optional: false

          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml .Values.volumeMounts | nindent 12 }}  
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}