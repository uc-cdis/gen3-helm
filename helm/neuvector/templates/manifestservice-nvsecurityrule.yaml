{{- if .Values.policies.include }}
apiVersion: neuvector.com/v1
kind: NvSecurityRule
metadata:
  name: nv.manifestservice-deployment.{{ .Release.Namespace }}
spec:
  dlp:
    settings: []
    status: true
  egress:
  - action: allow
    applications:
    - DNS
    name: nv.kube-dns.kube-system-egress-21
    ports: any
    priority: 0
    selector:
      comment: ""
      criteria:
      - key: service
        op: =
        value: kube-dns.kube-system
      - key: domain
        op: =
        value: kube-system
      name: nv.kube-dns.kube-system
      original_name: ""
  file: []
  ingress:
  - action: allow
    applications:
    - HTTP
    name: nv.manifestservice-deployment.{{ .Release.Namespace }}-ingress-53
    ports: any
    priority: 0
    selector:
      comment: ""
      name: Workload:ingress
      original_name: ""
  - action: allow
    applications:
    - any
    name: nv.manifestservice-deployment.{{ .Release.Namespace }}-ingress-54
    ports: tcp/80
    priority: 0
    selector:
      comment: ""
      name: Workload:ingress
      original_name: ""
  - action: allow
    applications:
    - HTTP
    name: nv.manifestservice-deployment.{{ .Release.Namespace }}-ingress-55
    ports: any
    priority: 0
    selector:
      comment: ""
      criteria:
      - key: service
        op: =
        value: revproxy-deployment.{{ .Release.Namespace }}
      - key: domain
        op: =
        value: {{ .Release.Namespace }}
      name: nv.revproxy-deployment.{{ .Release.Namespace }}
      original_name: ""
  process:
  - action: allow
    allow_update: false
    name: basename
    path: /usr/bin/basename
  - action: allow
    allow_update: false
    name: cat
    path: /bin/cat
  - action: allow
    allow_update: false
    name: chmod
    path: /bin/chmod
  - action: allow
    allow_update: false
    name: dockerrun.sh
    path: /bin/dash
  - action: allow
    allow_update: false
    name: find
    path: /usr/bin/find
  - action: allow
    allow_update: false
    name: grep
    path: /bin/grep
  - action: allow
    allow_update: false
    name: ldconfig
    path: /sbin/ldconfig
  - action: allow
    allow_update: false
    name: mkdir
    path: /bin/mkdir
  - action: allow
    allow_update: false
    name: mktemp
    path: /bin/mktemp
  - action: allow
    allow_update: false
    name: mv
    path: /bin/mv
  - action: allow
    allow_update: false
    name: nginx
    path: /usr/sbin/nginx
  - action: allow
    allow_update: false
    name: pause
    path: /pause
  - action: allow
    allow_update: false
    name: readlink
    path: /bin/readlink
  - action: allow
    allow_update: false
    name: rm
    path: /bin/rm
  - action: allow
    allow_update: false
    name: run-parts
    path: /bin/run-parts
  - action: allow
    allow_update: false
    name: sed
    path: /bin/sed
  - action: allow
    allow_update: false
    name: sh
    path: /bin/dash
  - action: allow
    allow_update: false
    name: sort
    path: /usr/bin/sort
  - action: allow
    allow_update: false
    name: uwsgi
    path: /usr/local/bin/uwsgi
  - action: allow
    allow_update: false
    name: wc
    path: /usr/bin/wc
  process_profile:
    baseline: zero-drift
  target:
    policymode: {{ .Values.policies.policyMode }}
    selector:
      comment: ""
      criteria:
      - key: service
        op: =
        value: manifestservice-deployment.{{ .Release.Namespace }}
      - key: domain
        op: =
        value: {{ .Release.Namespace }}
      name: nv.manifestservice-deployment.{{ .Release.Namespace }}
      original_name: ""
  waf:
    settings: []
    status: true
{{- end }}