# Default values for gen3workflow.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # -- (map) AWS configuration
  aws:
    # -- (bool) Set to true if deploying to AWS. Controls ingress annotations.
    enabled: false
    # -- (string) Credentials for AWS stuff.
    awsAccessKeyId:
    # -- (string) Credentials for AWS stuff.
    awsSecretAccessKey:
    externalSecrets:
      # -- (bool) Whether to use External Secrets for aws config.
      enabled: false
      # -- (String) Name of Secrets Manager secret.
      externalSecretAwsCreds:
  # -- (bool) Whether the deployment is for development purposes.
  dev: true
  postgres:
    # -- (bool) Whether the database should be created.
    dbCreate: false
    # -- (string) Name of external secret. Disabled if empty
    externalSecret: ""
    # -- (map) Master credentials to postgres. This is going to be the default postgres server being used for each service, unless each service specifies their own postgres
    master:
      # -- (string) hostname of postgres server
      host:
      # -- (string) username of superuser in postgres. This is used to create or restore databases
      username: postgres
      # -- (string) password for superuser in postgres. This is used to create or restore databases
      password:
      # -- (string) Port for Postgres.
      port: "5432"

  # -- (map) External Secrets settings.
  externalSecrets:
    # -- (bool) Will use ExternalSecret resources to pull secrets from Secrets Manager instead of creating them locally. Be cautious as this will override any gen3-workflow secrets you have deployed.
    deploy: false
    # -- (string) Will deploy a separate External Secret Store for this service.
    separateSecretStore: false
  
  # -- (map) Network policy settings.
  netPolicy:
    # -- (bool) Whether network policies are enabled
    enabled: false
# -- (bool) Whether Metrics are enabled.
metricsEnabled: false

# -- (map) External Secrets settings.
externalSecrets:
  createK8sGen3WorkflowSecret: false # -- (string) Will create the Helm "gen3workflow-g3auto" secret even if Secrets Manager is enabled. This is helpful if you are wanting to use External Secrets for some, but not all secrets.
  gen3workflowG3auto: "" # -- (string) Will override the name of the aws secrets manager secret. Default is "gen3workflow-g3auto"
  dbcreds: "" # -- (string) Will override the name of the aws secrets manager secret. Default is "Values.global.environment-.Chart.Name-creds"

# -- (map) Secret information for External Secrets.
secrets:
  # -- (str) AWS access key ID. Overrides global key.
  awsAccessKeyId:
  # -- (str) AWS secret access key ID. Overrides global key.
  awsSecretAccessKey:

#TODO: Enable this when we have a postgres db for gen3workflow
# # -- (map) Postgres database configuration. If db does not exist in postgres cluster and dbCreate is set to true then these databases will be created for you
# postgres:
#   # -- (bool) Whether the database should be created. Default to global.postgres.dbCreate
#   dbCreate:
#   # -- (string) Hostname for postgres server. This is a service override, defaults to global.postgres.host
#   host:
#   # -- (string) Database name for postgres. This is a service override, defaults to <serviceName>-<releaseName>
#   database:
#   # -- (string) Username for postgres. This is a service override, defaults to <serviceName>-<releaseName>
#   username:
#   # -- (string) Port for Postgres.
#   port: "5432"
#   # -- (string) Password for Postgres. Will be autogenerated if left empty.
#   password:
#   # -- (string) Will create a Database for the individual service to help with developing it.
#   separate: false


# -- (int) Number of desired replicas
replicaCount: 1

# -- (map) Rolling update deployment strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    # -- (int) Number of additional replicas to add during rollout.
    maxSurge: 1
    # -- (int) Maximum amount of pods that can be unavailable during the update.
    maxUnavailable: 0


# -- (bool) Automount the default service account token
automountServiceAccountToken: false

# -- (map) Docker image information.
image:
  # -- (string) The Docker image repository for the gen3workflow service
  repository: quay.io/cdis/gen3-workflow
  # -- (string) When to pull the image. This value should be "Always" to ensure the latest image is used.
  pullPolicy: Always
  # -- (string) Overrides the image tag whose default is the chart appVersion.
  tag: "feat_plugin-support"

# -- (list) Docker image pull secrets.
imagePullSecrets: []

# -- (string) Override the name of the chart. This can be used to provide a unique name for a chart
nameOverride: ""

# -- (string) Override the full name of the chart, which is used as the name of resources created by the chart
fullnameOverride: ""

# -- (map) Service account to use or create.
serviceAccount:
  # Specifies whether a service account should be created
  # -- (bool) Whether to create a service account
  create: true
  # Annotations to add to the service account
  annotations:
    # -- (string) The Amazon Resource Name (ARN) of the role to associate with the service account
    eks.amazonaws.com/role-arn:
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # -- (string) The name of the service account
  name: "gen3-workflow-sa"

# -- (map) Annotations to add to the pod
podAnnotations: {}

# -- (map) Security context for the pod
podSecurityContext: {}

# -- (map) Security context for the containers in the pod
securityContext:
  {}

  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- (map) Configuration for the service
service:
  # -- (string) Type of service. Valid values are "ClusterIP", "NodePort", "LoadBalancer", "ExternalName".
  type: ClusterIP
  # -- (int) Port on which the service is exposed
  port: 80

#TODO: Emable this when we are setting up network policies
# # -- (map) Configuration for network policies created by this chart. Only relevant if "global.netPolicy.enabled" is set to true
# netPolicy:
#   # -- (array) List of app labels that require ingress to this service
#   ingressApps:
#     - fence
#     - presigned-url-fence
    
#   # -- (array) List of apps that this app requires egress to
#   egressApps:
#     - fence
#     - presigned-url-fence

# -- (map) Resource requests and limits for the containers in the pod
resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- (map) Configuration for autoscaling the number of replicas
autoscaling:
  # -- (bool) Whether autoscaling is enabled or not
  enabled: false
  # -- (int) The minimum number of replicas to scale down to
  minReplicas: 1
  # -- (int) The maximum number of replicas to scale up to
  maxReplicas: 4
  # -- (int) The target CPU utilization percentage for autoscaling
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- (map) Node Selector for the pods
nodeSelector: {}

# -- (list) Tolerations for the pods
tolerations: []

# -- (map) Affinity to use for the deployment.
affinity:
  podAntiAffinity:
    # -- (map) Option for scheduling to be required or preferred.
    preferredDuringSchedulingIgnoredDuringExecution:
      # -- (int) Weight value for preferred scheduling.
      - weight: 25
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              # -- (list) Label key for match expression.
              - key: app
                # -- (string) Operation type for the match expression.
                operator: In
                # -- (list) Value for the match expression key.
                values:
                  - gen3-workflow
          # -- (string) Value for topology key label.
          topologyKey: "kubernetes.io/hostname"
  nodeAffinity:
    # -- (map) Option for scheduling to be required or preferred.
    preferredDuringSchedulingIgnoredDuringExecution:
      # -- (int) Weight value for preferred scheduling.
      - weight: 100
        preference:
          # -- (list) Label key for match expression.
          matchExpressions:
          - key: karpenter.sh/capacity-type
            # -- (string) Operation type for the match expression.
            operator: In
            # -- (list) Value for the match expression key.
            values:
            - spot
      # -- (int) Weight value for preferred scheduling.
      - weight: 99
        preference:
          # -- (list) Label key for match expression.
          matchExpressions:
          - key: eks.amazonaws.com/capacityType
            # -- (string) Operation type for the match expression.
            operator: In
            # -- (list) Value for the match expression key.
            values:
            - SPOT

# -- (list) Environment variables to pass to the container
env:
  - name: DEBUG
    value: "false"
  - name: ARBORIST_URL
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: arborist_url
        optional: true

# -- (list) Volumes to attach to the container.
volumes: []

# -- (list) Volumes to mount to the container.
volumeMounts: []

# -- (list) Volumes to mount to the init container.
initVolumeMounts: []

# -- (list) Volumes to attach to the init container.
initEnv: {}


# Values to determine the labels that are used for the deployment, pod, etc.
# -- (string) Valid options are "production" or "dev". If invalid option is set- the value will default to "dev".
release: "production"
# -- (string) Valid options are "true" or "false". If invalid option is set- the value will default to "false".
criticalService: "false"
# -- (string) Label to help organize pods and their use. Any value is valid, but use "_" or "-" to divide words.
partOf: "Workflow_Execution"
# -- (map) Will completely override the selectorLabels defined in the common chart's _label_setup.tpl
selectorLabels:
# -- (map) Will completely override the commonLabels defined in the common chart's _label_setup.tpl
commonLabels:
# -- (map) Will completely override the extraLabels defined in the common chart's _label_setup.tpl
extraLabels:
    dbgen3workflow: "yes"
    # for revproxy authz
    public: "yes"
    # for network policy
    netnolimit: "yes"

workflowConfig:
  # -- (bool) Whether to enable debug mode for the workflow service.
  debug: true
  # -- (string) The URL of the TES server.
  tesServerUrl: http://funnel:8000
  # -- (list) Whitelist of task images that can be used in the workflow service.
  taskImageWhitelist: ["*"]
  # -- (bool) Whether to enable Prometheus metrics for the workflow service.
  enablePrometheusMetrics: true
  # -- (bool) Whether to enable KMS encryption for the workflow service.
  kmsEncryptionEnabled: false

funnel:
  # -- (map) Configuration for the Funnel container image.
  image:
    # -- (string) The Docker image repository for the Funnel service.
    repository: quay.io/ohsu-comp-bio/funnel
    # -- (string) The Docker image tag for the Funnel service.
    tag: feature-plugins
    # -- (string) When to pull the image. This value should be "Always" to ensure the latest image is used.
    pullPolicy: Always
    
    # -- (map) Configuration for the Funnel init container.
    initContainer:
      # -- (string) The Docker image repository for the Funnel init/plugin container.
      image: quay.io/cdis/funnel-gen3-plugin
      # -- (string) The Docker image tag for the Funnel init/plugin container.
      tag: gen3-plugin  
      # -- (string) When to pull the image. This value should be "Always" to ensure the latest image is used.
      pullPolicy: Always
      # -- (list) Arguments to pass to the init container.
      command:
      - cp
      - /app/build/plugins-go/authorizer
      - /opt/funnel/plugin-binaries/auth-plugin
  mongodb:
    readinessProbe:
      enabled: true
      initialDelaySeconds: 20
      timeoutSeconds: 10
      periodSeconds: 10
      failureThreshold: 10


  # -- (map) Configuration for the Funnel plugin.
  Plugins:
    Disabled: false
    # -- (string) Path to the directory where Funnel plugins are stored.
    Path: plugin-binaries/auth-plugin
    
    # -- (map) Parameters to send to the Funnel plugin.
    Params: 
      # -- (string) S3 URL for Funnel plugin.
      S3Url: ""
      # -- (string) OIDC token URL for Funnel plugin.
      OidcTokenUrl: "" 
      # -- (string) OIDC client ID for Funnel plugin.
      OidcClientId: "" 
      # -- (string) OIDC client secret for Funnel plugin.
      OidcClientSecret: ""
  
  # -- (map) Kubernetes configuration for Funnel.
  Kubernetes:
    # -- (string) Namespace where Funnel server will be created.
    Namespace: ""
    # -- (string) Namespace where Funnel jobs will be created.
    JobsNamespace: ""

  Logger:
    # Logging levels: debug, info, error
    level: info