apiVersion: batch/v1
kind: Job
metadata:
  name: sheepdog-dbinit
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: gen3job
    spec:
      automountServiceAccountToken: false
      # volumes:
      #   - name: creds-volume
      #     secret:
      #       secretName: "sheepdog-creds"
      containers:
        - name: sheepdog
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
          - name: DICTIONARY_URL
            value: {{ .Values.dictionaryUrl }}
          - name: PGHOST
            valueFrom:
              secretKeyRef:
                name: {{ .Chart.Name }}-dbcreds
                key: host
                optional: false  
          - name: PGUSER
            valueFrom:
              secretKeyRef:
                name: {{ .Chart.Name }}-dbcreds
                key: username
                optional: false 
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Chart.Name }}-dbcreds
                key: password
                optional: false
          - name: PGDB
            valueFrom:
              secretKeyRef:
                name: {{ .Chart.Name }}-dbcreds
                key: database
                optional: false
          # volumeMounts:
          #   - name: "creds-volume"
          #     readOnly: true
          #     mountPath: "/var/www/sheepdog/creds.json"
          #     subPath: creds.json
          # imagePullPolicy: Always
          command: ["/bin/bash" ]
          args: 
            - "-c"
            # Script always succeeds if it runs (echo exits with 0)  
            - |
              #
              # sheepdog sets up core data model now,
              # but suffers from a race condition doing it ...
              #
              echo datamodel_postgres_admin create-all -U "${PGUSER}" -P XXXXXXX -H "${PGHOST}" -D "${PGDB}"
              datamodel_postgres_admin create-all -U "${PGUSER}" -P "${PGPASSWORD}" -H "${PGHOST}" -D "${PGDB}"
              
              echo python /sheepdog/bin/setup_transactionlogs.py --user "${PGUSER}"  --password XXXXX --host "${PGHOST}" --database "${PGDB}"
              python /sheepdog/bin/setup_transactionlogs.py --user "${PGUSER}"  --password "${PGPASSWORD}" --host "${PGHOST}" --database "${PGDB}"
      restartPolicy: OnFailure