apiVersion: apps/v1
kind: Deployment
metadata:
  name: sheepdog-deployment
  {{- with .Values.podAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "sheepdog.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "sheepdog.selectorLabels" . | nindent 6 }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        # gen3 networkpolicy labels
        netnolimit: 'yes'
        public: 'yes'
        s3: 'yes'
      {{- if eq (include "sheepdog.ddEnabled" . ) "true" }}
        tags.datadoghq.com/service: "sheepdog"
        # TODO: move this to helpers so we can have this populated from a configmap
        tags.datadoghq.com/env: {{ .Values.dataDog.env }}
        tags.datadoghq.com/version: {{ .Values.image.tag | default .Chart.AppVersion }}
      {{- end }}
        {{- include "sheepdog.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      volumes:
        - name: config-volume
          secret:
            secretName: "sheepdog-secret"
        - name: creds-volume
          secret:
            secretName: "sheepdog-creds"
        - name: config-helper
          configMap:
            name: config-helper
      initContainers:
        - name: sheepdog-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
          - name: DICTIONARY_URL
            value: {{ .Values.dictionaryUrl }}
          - name: PGHOST
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: host
                optional: false  
          - name: PGUSER
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: username
                optional: false 
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: password
                optional: false
          - name: PGDB
            valueFrom:
              secretKeyRef:
                name: sheepdog-dbcreds
                key: database
                optional: false
          command: ["/bin/bash" ]
          args: 
            - "-c"
            # Script always succeeds if it runs (echo exits with 0)  
            - |
              #
              # sheepdog sets up core data model now,
              # but suffers from a race condition doing it ...
              #
              echo datamodel_postgres_admin create-all -U "${PGUSER}" -P XXXXXXX -H "${PGHOST}" -D "${PGDB}"
              datamodel_postgres_admin create-all -U "${PGUSER}" -P "${PGPASSWORD}" -H "${PGHOST}" -D "${PGDB}"
              
              echo python /sheepdog/bin/setup_transactionlogs.py --user "${PGUSER}"  --password XXXXX --host "${PGHOST}" --database "${PGDB}"
              python /sheepdog/bin/setup_transactionlogs.py --user "${PGUSER}"  --password "${PGPASSWORD}" --host "${PGHOST}" --database "${PGDB}"
      containers:
        - name: sheepdog
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.ports}}
          ports:
            {{- toYaml . | nindent 12}}
          {{- end }}
           {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12}}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12}}
          {{- end }}
          # command: ["/bin/bash" ]
          # args: 
          #   - "-c"
          #   - "sleep infinity"
          env: 
            - name: FENCE_DB_USER
              valueFrom:
                secretKeyRef:
                  name: fence-dbcreds
                  key: username
                  optional: false
            - name: FENCE_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: fence-dbcreds
                  key: password
                  optional: false
            - name: FENCE_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: fence-dbcreds
                  key: host
                  optional: false
            - name: FENCE_DB_DBNAME
              valueFrom:
                secretKeyRef:
                  name: fence-dbcreds
                  key: database
                  optional: false
            - name: FLASK_SECRET_KEY
              value: "TODO: FIX THIS!!!"
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: sheepdog-dbcreds
                  key: host
                  optional: false  
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: sheepdog-dbcreds
                  key: username
                  optional: false 
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: sheepdog-dbcreds
                  key: password
                  optional: false
            - name: PGDB
              valueFrom:
                secretKeyRef:
                  name: sheepdog-dbcreds
                  key: database
                  optional: false
            - name: PUBLIC_DATASETS
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: public_datasets
                  optional: true
            # - name: INDEX_CLIENT_HOST
            #   valueFrom:
            #     configMapKeyRef:
            #       name: manifest-global
            #       key: indexd_url
            #       optional: true
            - name: FENCE_URL
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: fence_url
                  optional: true
            - name: INDEXD_PASS
              valueFrom:
                secretKeyRef:
                  name: indexd-service-creds
                  key: gdcapi
                  optional: false
            - name: GEN3_UWSGI_TIMEOUT
              value: "600"
            - name: DICTIONARY_URL
              value: {{ include "sheepdog.dictionaryUrl" .}}
            {{- with .Values.indexdUrl }}
            - name: INDEX_CLIENT_HOST
              value: {{ . }}
            {{- end }}
            {{- with .Values.fenceUrl }}
            - name: FENCE_URL
              value: {{ . }}
            {{- end }}
            {{- with .Values.arboristUrl }}
            - name: ARBORIST_URL
              value: {{ . }}
            {{- end }}
            {{- with .Values.authNamespace }}
            - name: AUTH_NAMESPACE
              value: {{ . }}
            {{- end }}
            # - name: REQUESTS_CA_BUNDLE
            #   #
            #   # override python 'requests' SSL certificate bundle
            #   # to use system trusted certs
            #   # which includes our private certificate authority
            #   #
            #   value: /etc/ssl/certs/ca-certificates.crt
            - name: GEN3_DEBUG
              value: "True"
            {{- with .Values.ddTraceEnabled }}
            - name: DD_TRACE_ENABLED
              value: {{ . }}
            {{- end }}
            {{- with .Values.ddEnv }}
            - name: DD_ENV
              value: {{ . }}
            {{- end }}
            {{- with .Values.ddService }}
            - name: DD_SERVICE
              value: {{ . }}
            {{- end }}
            {{- with .Values.ddVersion }}
            - name: DD_VERSION
              value: {{ . }}
            {{- end }}
            {{- with .Values.ddLogsInjection }}
            - name: DD_LOGS_INJECTION
              value: {{ . }}
            {{- end }}
            {{- with .Values.ddProfilingEnabled }}
            - name: DD_PROFILING_ENABLED
              value: {{ . }}
            {{- end }}
            {{- with .Values.ddTraceSampleRate }}
            - name: DD_TRACE_SAMPLE_RATE
              value: {{ . }}
            {{- end }}
            {{- with .Values.ddTraceAgentHostname }}
            - name: DD_TRACE_AGENT_HOSTNAME
              value: {{ . }}
            {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}