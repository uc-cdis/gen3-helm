---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cedar-wrapper-deployment
  labels:
    {{- include "cedar.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cedar.selectorLabels" . | nindent 6 }}
      release: {{ .Values.release }}
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- $metricsEnabled := .Values.metricsEnabled }}
      {{- if eq $metricsEnabled nil }}
        {{- $metricsEnabled = .Values.global.metricsEnabled }}
      {{- end }}
      {{- if eq $metricsEnabled nil }}
        {{- $metricsEnabled = true }}
      {{- end }}

      {{- if $metricsEnabled }}
        {{- include "common.grafanaAnnotations" . | nindent 8 }}
      {{- end }}
      labels:
        netnolimit: "yes"
        public: "yes"
        userhelper: "yes"
        {{- include "cedar.selectorLabels" . | nindent 8 }}
        {{- include "common.extraLabels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 10
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 25
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - cedar-wrapper
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values:
                - spot
          - weight: 99
            preference:
              matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - SPOT
      volumes:
        - name: config-volume
          secret:
            secretName: cedar-wrapper-config
        - name: privacy-policy
          configMap:
            name: privacy-policy
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: cedar-wrapper
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/bash
            - /src/start.sh
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /_status/
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /_status/
              port: 8000
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 30
            failureThreshold: 6
          env:
            - name: HOSTNAME
              value: revproxy-service
            - name: API_KEY
              valueFrom:
                secretKeyRef:
                  name: cedar-g3auto
                  key: cedar_api_key.txt
            - name: GEN3_DEBUG
              value: {{ .Values.debug | quote }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}