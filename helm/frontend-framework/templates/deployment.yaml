apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-framework-deployment
  labels:
    {{- include "frontend-framework.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "frontend-framework.selectorLabels" . | nindent 6 }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  strategy:
    {{- toYaml .Values.strategy | nindent 8 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configMap.yaml") . | sha256sum }}
        {{- if coalesce .Values.metricsEnabled .Values.global.metricsEnabled true }}
        {{- include "common.grafanaAnnotations" . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "frontend-framework.selectorLabels" . | nindent 8 }}
        {{- include "common.extraLabels" . | nindent 8 }}
        public: "yes"
    spec:
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken}}
      {{- if .Values.customConfig.enabled }}
      initContainers:
        - name: config-puller
          image: alpine/git
          env:
            - name: CONFIG_DIR
              value: {{ .Values.customConfig.dir }}
            - name: GIT_REPO
              value: {{ .Values.customConfig.repo  }}
            - name: GIT_BRANCH
              value: {{ .Values.customConfig.branch }}
          command:
            - /bin/sh
            - -c
            - |
              mkdir -p /tmp/repo
              cd /tmp/repo
              # Clone with sparse checkout and filter
              git clone --depth 1 ${GIT_REPO} siteconfig
              cd siteconfig

              # Fetch the branch
              git fetch origin ${GIT_BRANCH}:config_branch
              git switch config_branch
              {{- if .Values.configDir }}
              cp -r /tmp/repo/siteconfig/{{ .Values.configDir }}/config/* /gen3/config
              cp -r /tmp/repo/siteconfig/{{ .Values.configDir }}/public/* /gen3/public
              {{- else }}
              cp -r /tmp/repo/siteconfig/config/* /gen3/config
              cp -r /tmp/repo/siteconfig/public/* /gen3/public
              {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /gen3/config
            - name: public-volume
              mountPath: /gen3/public
          {{- end }}
      containers:
        - name: frontend-framework
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              {{- if eq "portal" .Values.global.frontendRoot }}
              path: /ff
              {{- else }}
              path: /
              {{- end }}
              port: {{ .Values.port }}
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              {{- if eq "portal" .Values.global.frontendRoot }}
              path: /ff
              {{- else }}
              path: /
              {{- end }}
              port: {{ .Values.port }}
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort: {{ .Values.port }}
              name: http
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "frontend-framework.fullname" . }}-configmap
                optional: true
          env:
            - name: PORT
              value: {{ .Values.port | quote }}
            - name: HOSTNAME
              value: revproxy-service
            {{- if eq "portal" .Values.global.frontendRoot }}
            - name: BASE_PATH
              value: /ff
            {{- else}}
            - name: NEXT_PUBLIC_PORTAL_BASENAME
              value: /portal
            {{- end }}
          {{- if .Values.customConfig.enabled }}
          volumeMounts:
            - name: config-volume
              mountPath: /gen3/config
            - name: public-volume
              mountPath: /gen3/public
          {{- end }}
      volumes:
        - name: config-volume
          emptyDir: {}
        - name: public-volume
          emptyDir: {}