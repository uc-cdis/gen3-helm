# Default values for hatchery.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- (map) Global configuration options.
global:
  # -- (map) AWS configuration
  aws:
    # -- (bool) Set to true if deploying to AWS. Controls ingress annotations.
    enabled: false
    # -- (string) Credentials for AWS stuff.
    awsAccessKeyId:
    # -- (string) Credentials for AWS stuff.
    awsSecretAccessKey:
  # -- (bool) Whether the deployment is for development purposes.
  dev: true
  # -- (map) Postgres database configuration.
  postgres:
    # -- (bool) Whether the database should be created.
    dbCreate: true
    # -- (map) Master credentials to postgres. This is going to be the default postgres server being used for each service, unless each service specifies their own postgres
    master:
      # -- (string) hostname of postgres server
      host:
      # -- (string) username of superuser in postgres. This is used to create or restore databases
      username: postgres
      # -- (string) password for superuser in postgres. This is used to create or restore databases
      password:
      # -- (string) Port for Postgres.
      port: "5432"
  # -- (string) Environment name. This should be the same as vpcname if you're doing an AWS deployment. Currently this is being used to share ALB's if you have multiple namespaces. Might be used other places too.
  environment: default
  # -- (string) Hostname for the deployment.
  hostname: localhost
  # -- (string) ARN of the reverse proxy certificate.
  revproxyArn: arn:aws:acm:us-east-1:123456:certificate
  # -- (string) URL of the data dictionary.
  dictionaryUrl: https://s3.amazonaws.com/dictionary-artifacts/datadictionary/develop/schema.json
  # -- (string) Portal application name.
  portalApp: gitops
  # -- (string) S3 bucket name for Kubernetes manifest files.
  kubeBucket: kube-gen3
  # -- (string) S3 bucket name for log files.
  logsBucket: logs-gen3
  # -- (bool) Whether to sync data from dbGaP.
  syncFromDbgap: false
  # -- (string) Path to the user.yaml file in S3.
  userYamlS3Path: s3://cdis-gen3-users/test/user.yaml
  # -- (bool) Whether public datasets are enabled.
  publicDataSets: true
  # -- (string) Access level for tiers. acceptable values for `tier_access_level` are: `libre`, `regular` and `private`. If omitted, by default common will be treated as `private`
  tierAccessLevel: libre
  # -- (bool) Whether network policies are enabled.
  netPolicy: true
  # -- (int) Number of dispatcher jobs.
  dispatcherJobNum: 10
  # -- (bool) Whether Datadog is enabled.
  ddEnabled: false

# -- (int) Number of replicas for the deployment.
replicaCount: 1

# -- (map) Docker image information.
image:
  # -- (string) Docker repository.
  repository: quay.io/cdis/hatchery
  # -- (string) Docker pull policy.
  pullPolicy: IfNotPresent
  # -- (string) Overrides the image tag whose default is the chart appVersion.
  tag: ""

# -- (list) Docker image pull secrets.
imagePullSecrets: []

# -- (string) Override the name of the chart.
nameOverride: ""

# -- (string) Override the full name of the deployment.
fullnameOverride: ""

# -- (map) Kubernetes service information.
service:
  # -- (string) Type of service. Valid values are "ClusterIP", "NodePort", "LoadBalancer", "ExternalName".
  type: ClusterIP
  # -- (int) The port number that the service exposes.
  port: 80

# -- (map) Resource requests and limits for the containers in the pod
resources:
  # -- (map) The amount of resources that the container requests
  requests:
    # -- (string) The amount of CPU requested
    cpu: 0.1
    # -- (string) The amount of memory requested
    memory: 12Mi
  # -- (map) The maximum amount of resources that the container is allowed to use
  limits:
    # -- (string) The maximum amount of cpu the container can use
    cpu: 1.0
    # -- (string) The maximum amount of memory the container can use
    memory: 512Mi

# -- (map) Configuration for autoscaling the number of replicas
autoscaling:
  # -- (bool) Whether autoscaling is enabled or not
  enabled: false
  # -- (int) The minimum number of replicas to scale down to
  minReplicas: 1
  # -- (int) The maximum number of replicas to scale up to
  maxReplicas: 100
  # -- (int) The target CPU utilization percentage for autoscaling
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- (map) Node selector labels.
nodeSelector: {}

# -- (list) Tolerations to use for the deployment.
tolerations: []

# -- (map) Affinity to use for the deployment.
affinity: {}

# -- (list) Environment variables to pass to the container
env:
- name: HTTP_PORT
  value: "8000"
- name: POD_NAMESPACE
  valueFrom:
    fieldRef:
      fieldPath: metadata.namespace

# -- (list) Volumes to attach to the container.
volumes:
- name: hatchery-config
  configMap:
    name: manifest-hatchery

# -- (list) Volumes to mount to the container.
volumeMounts:
- name: hatchery-config
  readOnly: true
  mountPath: /hatchery.json
  subPath: json

# -- (map) Hatchery sidcar container configuration.
hatchery:
  sidecarContainer:
    # -- (string) The maximum amount of CPU the sidecar container can use
    cpu-limit: '0.1'
    # -- (string) The maximum amount of memory the sidecar container can use
    memory-limit: 256Mi
    # -- (string) The sidecar image.
    image: quay.io/cdis/ecs-ws-sidecar:master
    # -- (map) Environment variables to pass to the sidecar container
    env:
      NAMESPACE: "{{ .Release.Namespace }}"
      HOSTNAME: "{{ .Values.global.hostname }}"
    # -- (list) Arguments to pass to the sidecare container.
    args: []
    # -- (list) Commands to run for the sidecar container.
    command:
    - "/bin/bash"
    - "./sidecar.sh"
    # -- (list) Commands that are run before the container is stopped.
    lifecycle-pre-stop:
    - su
    - "-c"
    - echo test
    - "-s"
    - "/bin/sh"
    - root

# -- (list) Notebook configuration.
  containers:
    - target-port: 8888
      cpu-limit: '1.0'
      memory-limit: 2Gi
      name: "(Tutorials) Example Analysis Jupyter Lab Notebooks"
      image: quay.io/cdis/heal-notebooks:combined_tutorials__latest
      env:
        FRAME_ANCESTORS: https://{{ .Values.global.hostname }}
      args:
      - "--NotebookApp.base_url=/lw-workspace/proxy/"
      - "--NotebookApp.default_url=/lab"
      - "--NotebookApp.password=''"
      - "--NotebookApp.token=''"
      - "--NotebookApp.shutdown_no_activity_timeout=5400"
      - "--NotebookApp.quit_button=False"
      command:
      - start-notebook.sh
      path-rewrite: "/lw-workspace/proxy/"
      use-tls: 'false'
      ready-probe: "/lw-workspace/proxy/"
      lifecycle-post-start:
      - "/bin/sh"
      - "-c"
      - export IAM=`whoami`; rm -rf /home/$IAM/pd/dockerHome; rm -rf /home/$IAM/pd/lost+found;
        ln -s /data /home/$IAM/pd/; true
      user-uid: 1000
      fs-gid: 100
      user-volume-location: "/home/jovyan/pd"
      gen3-volume-location: "/home/jovyan/.gen3"

# Values to determine the labels that are used for the deployment, pod, etc.
# -- (string) Valid options are "production" or "dev". If invalid option is set- the value will default to "dev".
release: "production"
# -- (string) Valid options are "true" or "false". If invalid option is set- the value will default to "false".
criticalService: "true"
# -- (string) Label to help organize pods and their use. Any value is valid, but use "_" or "-" to divide words.
partOf: "Workspace-Tab"
# -- (map) Will completely override the selectorLabels defined in the common chart's _label_setup.tpl
selectorLabels:
# -- (map) Will completely override the commonLabels defined in the common chart's _label_setup.tpl
commonLabels:

# Values to configure datadog if ddEnabled is set to "true".
# -- (bool) If enabled, the Datadog Agent will automatically inject Datadog-specific metadata into your application logs.
datadogLogsInjection: true
# -- (bool) If enabled, the Datadog Agent will collect profiling data for your application using the Continuous Profiler. This data can be used to identify performance bottlenecks and optimize your application.
datadogProfilingEnabled: true
# -- (int) A value between 0 and 1, that represents the percentage of requests that will be traced. For example, a value of 0.5 means that 50% of requests will be traced.
datadogTraceSampleRate: 1
