# Default values for guppy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- (map) Global configuration options.
global:
  # -- (map) AWS configuration
  aws:
    # -- (bool) Set to true if deploying to AWS. Controls ingress annotations.
    enabled: false
    # -- (string) Credentials for AWS stuff.
    awsAccessKeyId:
    # -- (string) Credentials for AWS stuff.
    awsSecretAccessKey:
  # -- (bool) Whether the deployment is for development purposes.
  dev: true
  # -- (map) Postgres database configuration.
  postgres:
    # -- (bool) Whether the database should be created.
    dbCreate: true
    # -- (map) Master credentials to postgres. This is going to be the default postgres server being used for each service, unless each service specifies their own postgres
    master:
      # -- (string) hostname of postgres server
      host:
      # -- (string) username of superuser in postgres. This is used to create or restore databases
      username: postgres
      # -- (string) password for superuser in postgres. This is used to create or restore databases
      password:
      # -- (string) Port for Postgres.
      port: "5432"
  # -- (string) Environment name. This should be the same as vpcname if you're doing an AWS deployment. Currently this is being used to share ALB's if you have multiple namespaces. Might be used other places too.
  environment: default
  # -- (string) Hostname for the deployment.
  hostname: localhost
  # -- (string) ARN of the reverse proxy certificate.
  revproxyArn: arn:aws:acm:us-east-1:123456:certificate
  # -- (string) URL of the data dictionary.
  dictionaryUrl: https://s3.amazonaws.com/dictionary-artifacts/datadictionary/develop/schema.json
  # -- (string) Portal application name.
  portalApp: gitops
  # -- (string) S3 bucket name for Kubernetes manifest files.
  kubeBucket: kube-gen3
  # -- (string) S3 bucket name for log files.
  logsBucket: logs-gen3
  # -- (bool) Whether to sync data from dbGaP.
  syncFromDbgap: false
  # -- (string) Path to the user.yaml file in S3.
  userYamlS3Path: s3://cdis-gen3-users/test/user.yaml
  # -- (bool) Whether public datasets are enabled.
  publicDataSets: true
  # -- (string) Access level for tiers.
  tierAccessLevel: libre
  # -- (bool) Whether network policies are enabled.
  netPolicy: true
  # -- (int) Number of dispatcher jobs.
  dispatcherJobNum: 10
  # -- (bool) Whether Datadog is enabled.
  ddEnabled: false


# Deployment
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

secrets:
  awsAccessKeyId:
  awsSecretAccessKey:

replicaCount: 1

revisionHistoryLimit: 2

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

dataDog:
  enabled: false
  env: dev

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - guppy
        topologyKey: "kubernetes.io/hostname"

volumes:
  - name: guppy-config
    configMap:
      name: manifest-guppy
      items:
        - key: guppy_config.json
          path: guppy_config.json

automountServiceAccountToken: false

image:
  repository: quay.io/cdis/guppy
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""


# Environment Variables
esEndpoint: ""
arboristUrl: http://arborist-service
tierAccessLevel: regular
# acceptable values for `tier_access_level` are: `libre`, `regular` and `private`. If omitted, by default common will be treated as `private`
tierAccessLimit: 1000
# Placeholders for datadog
ddTraceEnabled:
ddEnv:
ddService:
ddVersion:
ddLogsInjection:
ddProfilingEnabled:
ddTraceSampleRate:
ddTraceAgentHostname:


livenessProbe:
  httpGet:
    path: /_status
    port: 8000
  initialDelaySeconds: 30
  periodSeconds: 60
  timeoutSeconds: 30
readinessProbe:
  httpGet:
    path: /_status
    port: 8000

containerPort:
  - containerPort: 8000

volumeMounts:
  - name: guppy-config
    readOnly: true
    mountPath: /guppy/guppy_config.json
    subPath: guppy_config.json

resources:
  requests:
    cpu: 0.1
    memory: 500Mi
  limits:
    cpu: 1
    memory: 2Gi


# Service and Pod
service:
  type: ClusterIP
  port:
    - protocol: TCP
      port: 80
      targetPort: 8000
      name: http

# Configmap
# -- (list) Elasticsearch index configurations
indices:
- index: dev_case
  type: case
- index: dev_file
  type: file
# -- (string) The Elasticsearch configuration index
configIndex: dev_case-array-config
# -- (string) The field used for access control and authorization filters
authFilterField: auth_resource_path
# -- (bool) Whether or not to enable encryption for specified fields
enableEncryptWhitelist: true
# -- (string) A comma-separated list of fields to encrypt
encryptWhitelist: test1

# -- (bool) Whether or not to restore elasticsearch indices from a snapshot in s3
dbRestore: true
