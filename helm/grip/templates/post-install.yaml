apiVersion: batch/v1
kind: Job
metadata:
  name: grip-initdb
spec:
  backoffLimit: 10
  template:
    metadata:
      labels:
        app: gen3job
    spec:
      containers:
      - name: grip
        # Use an Alpine image with curl pre-installed
        image: "curlimages/curl:latest"
        imagePullPolicy: Always
        command: ["/bin/sh"]
        args:
          - "-c"
          - |
            echo "Waiting for the grip service to be available..."
            until curl -s --head --request GET http://{{ .Values.serviceName }}:8201/writer/_status | grep "200 OK" > /dev/null; do
              echo "Grip service not ready, retrying in 5 seconds..."
              sleep 5
            done
            echo "Grip is online. Creating {{.Values.graphName}} Graph"
            curl -X POST 'http://{{ .Values.serviceName }}:8201/v1/graph/{{.Values.graphName}}'
            echo "Adding {{.Values.graphName}} schema from https://raw.githubusercontent.com/bmeg/iceberg/7f6cfdb558d05370fc645b5ab894b98b38a01e1b/schemas/graph/graph-fhir.json"
            curl -s https://raw.githubusercontent.com/bmeg/iceberg/7f6cfdb558d05370fc645b5ab894b98b38a01e1b/schemas/graph/graph-fhir.json -o /tmp/schema.json
            echo '{"graph":"{{.Values.graphName}}","data":' > /tmp/request.json
            cat /tmp/schema.json >> /tmp/request.json
            echo '}' >> /tmp/request.json
            curl -X POST --header "Content-Type: application/json" --data @/tmp/request.json http://{{ .Values.serviceName }}:8201/v1/graph/{{.Values.graphName}}/jsonschema

            vertex_labels=$(curl -s -X GET "http://{{.Values.serviceName}}:8201/v1/graph/{{.Values.graphName}}__schema__/label" | sed -n 's/.*"vertexLabels":\[\([^]]*\)\].*/\1/p' | sed 's/"//g' | tr ',' '\n')

            echo "$vertex_labels" | while read -r label; do
                JSON_PAYLOAD="{\"field\": \"auth_resource_path\"}"
                curl -s -X POST \
                    "http://{{.Values.serviceName}}:8201/v1/graph/CALYPR/index/${label}" \
                    -H 'Content-Type: application/json' \
                    -d "${JSON_PAYLOAD}"
            done



      restartPolicy: OnFailure
