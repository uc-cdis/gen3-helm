apiVersion: apps/v1
kind: Deployment
metadata:
  name: portal-deployment
  labels:
    {{- include "portal.labels" . | nindent 4 }}
    {{- if .Values.global.ddEnabled }}
    {{- include "common.datadogLabels" . | nindent 4 }}
    {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "portal.selectorLabels" . | nindent 6 }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  strategy:
    {{- toYaml .Values.strategy | nindent 8 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "portal.selectorLabels" . | nindent 8 }}
        public: "yes"
        {{- if .Values.global.ddEnabled }}
        {{- include "common.datadogLabels" . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken}}
      volumes:
      - name: config-volume
        secret:
          secretName: "portal-config"
      - name: sponsor-img-volume
        secret:
          secretName: "portal-sponsor-config"
      - name: privacy-policy
        configMap:
          name: "privacy-policy"     
      containers:
        - name: portal
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: 80
          #   initialDelaySeconds: 60
          #   periodSeconds: 30
          #   timeoutSeconds: 30
          #   failureThreshold: 30
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort: 80
            - containerPort: 443
          # command:
          #   - /bin/bash
          #   - ./dockerStart.sh
          env:
            {{- if .Values.global.ddEnabled }}
            {{- include "common.datadogEnvVar" . | nindent 12 }}
            {{- end }}
            - name: HOSTNAME
              value: revproxy-service
            # disable npm 7's brand new update notifier to prevent Portal from stuck at starting up
            # see https://github.com/npm/cli/issues/3163
            - name: NPM_CONFIG_UPDATE_NOTIFIER
              value: "false"
            - name: NODE_ENV
              value: "dev"
            - name: APP
              value: {{ .Values.portalApp | quote }}
            - name: GEN3_BUNDLE
              # optional: true
              value: ""
            - name: LOGOUT_INACTIVE_USERS
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: logout_inactive_users
                  optional: true
            - name: WORKSPACE_TIMEOUT_IN_MINUTES
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: workspace_timeout_in_minutes
                  optional: true
            - name: TIER_ACCESS_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  # acceptable values for `tier_access_level` are: `libre`, `regular` and `private`. If omitted, by default common will be treated as `private`
                  key: tier_access_level
                  # for now making it optional so won't break anything
                  optional: true
#needed to be adjusted to use the gen3 umbrella chart or local var ^ 
#adding a var in helpers.tpl for later- Elise
            - name: TIER_ACCESS_LIMIT
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: tier_access_limit
                  optional: true
            - name: FENCE_URL
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: fence_url
                  optional: true
            - name: INDEXD_URL
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: indexd_url
                  optional: true
            - name: WORKSPACE_URL
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: workspace_url
                  optional: true
            - name: MANIFEST_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: manifest_service_url
                  optional: true
            - name: WTS_URL
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: wts_url
                  optional: true
            - name: PRIVACY_POLICY_URL
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: privacy_policy_url
                  optional: true
            - name: MAPBOX_API_TOKEN
              # Optional token for mapbox api
              valueFrom:
                configMapKeyRef:
                  name: global
                  key: mapbox_token
                  optional: true
            {{- with .Values.datadogApplicationId  }}      
            - name: DATADOG_APPLICATION_ID
              # Optional client token for Datadog
              value: {{ . }}
            {{- end }}
            {{- with .Values.datadogClientToken  }}      
            - name: DATADOG_CLIENT_TOKEN
              # Optional client token for Datadog
              value: {{ . }}
            {{- end }}
            {{- with .Values.dataUploadBucket  }}
            - name: DATA_UPLOAD_BUCKET
              value: {{ . }}
            {{- end }}
              # S3 bucket name for data upload, for setting up CSP
              #GEN3_DATA_UPLOAD_BUCKET|-value: ""-|
            # - name: BASENAME
          volumeMounts:
            - name: "config-volume"
              mountPath: "/data-portal/data/config/gitops.json"
              subPath: "gitops.json"
            - name: "config-volume"
              mountPath: "/data-portal/custom/logo/gitops-logo.png"
              subPath: "gitops-logo.png"
            - name: "config-volume"
              mountPath: "/data-portal/custom/createdby/gitops.png"
              subPath: "gitops-createdby.png"
            - name: "config-volume"
              mountPath: "/data-portal/custom/favicon/gitops-favicon.ico"
              subPath: "gitops-favicon.ico"
            - name: "config-volume"
              mountPath: "/data-portal/custom/css/gitops.css"
              subPath: "gitops.css"
            - name: "sponsor-img-volume"
              mountPath: "/data-portal/custom/sponsors/gitops-sponsors"
            - name: "privacy-policy"
              readOnly: true
              mountPath: "/data-portal/custom/privacy_policy.md"
              subPath: "privacy_policy.md"
              