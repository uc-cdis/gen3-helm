# Default values for portal.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/cdis/data-portal
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # TODO: REMOVE THIS AFTER DEV IS COMPLETE
  tag: "prebuilt"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

selectorLabels:
  app: portal

revisionHistoryLimit: 2

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 2
    maxUnavailable: 25%

labels:
  app: portal
  public: "yes"


affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app
            operator: In
            values:
            - portal
        topologyKey: "kubernetes.io/hostname"

automountServiceAccountToken: false



resources:
  requests:
    cpu: 0.6
    memory: 512Mi
  limits:
    cpu: 2.0
    memory: 4096Mi

portalApp: "dev"

volumes:
  - name: docker-config
    configMap:
      name: docker-command
  - name: config-volume
    secret:
      secretName: "portal-config"
  - name: sponsor-img-volume
    secret:
      secretName: "portal-sponsor-config"
  - name: privacy-policy
    configMap:
      name: "privacy-policy"

env:

volumeMounts:
  - name: "docker-config"
    mountPath: "/data-portal/dockerStart.sh"
    subPath: "dockerStart.sh"
  - name: "config-volume"
    mountPath: "/data-portal/data/config/gitops.json"
    subPath: "gitops.json"
  - name: "config-volume"
    mountPath: "/data-portal/custom/logo/gitops-logo.png"
    subPath: "gitops-logo.png"
  - name: "config-volume"
    mountPath: "/data-portal/custom/createdby/gitops.png"
    subPath: "gitops-createdby.png"
  - name: "config-volume"
    mountPath: "/data-portal/custom/favicon/gitops-favicon.ico"
    subPath: "gitops-favicon.ico"
  - name: "config-volume"
    mountPath: "/data-portal/custom/css/gitops.css"
    subPath: "gitops.css"
  - name: "sponsor-img-volume"
    mountPath: "/data-portal/custom/sponsors/gitops-sponsors"
  - name: "privacy-policy"
    readOnly: true
    mountPath: "/data-portal/custom/privacy_policy.md"
    subPath: "privacy_policy.md"
