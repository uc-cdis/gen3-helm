{{- if index .Values "crossplane-crds" "enable" }}
{{- if index .Values "crossplane-crds" "useIRSA" }}
apiVersion: pkg.crossplane.io/v1beta1
kind: DeploymentRuntimeConfig
metadata:
  name: irsa-runtimeconfig
spec:
  serviceAccountTemplate:
    metadata:
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::{{ .Values.accountNumber }}:role/{{ index .Values "crossplane-crds" "iamRoleName" }}
---
apiVersion: aws.crossplane.io/v1beta1
kind: ProviderConfig
metadata:
  name: provider-aws
spec:
  credentials:
    source: InjectedIdentity
---
{{- else }}
apiVersion: v1
kind: Secret
metadata:
  name: aws-creds
  namespace: crossplane-system
type: Opaque
stringData:
  creds: |
    [default]
    aws_access_key_id = {{ index .Values "crossplane-crds" "awsAccessKeyID" }}
    aws_secret_access_key = {{ index .Values "crossplane-crds" "awsSecretAccessKey" }}
---
apiVersion: aws.crossplane.io/v1beta1
kind: ProviderConfig
metadata:
  name: provider-aws
spec:
  credentials:
    source: Secret
    secretRef:
      namespace: crossplane-system
      name: aws-creds
      key: creds
---
{{- end }}
apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: provider-aws
spec:
  package: xpkg.upbound.io/crossplane-contrib/provider-aws:{{ index .Values "crossplane-crds" "targetRevision" }}
  controllerConfigRef:
    name: aws-config
---
apiVersion: aws.crossplane.io/v1beta1
kind: ProviderConfig
metadata:
  name:  provider-aws
spec:
  credentials:
    source: InjectedIdentity
---
apiVersion: pkg.crossplane.io/v1alpha1
kind: ControllerConfig
metadata:
  name: aws-config
spec:
  env:
  # AWS region required to resolve service endpoints
  - name: AWS_REGION
    value: {{ index .Values "crossplane-crds" "region" }}
{{- end }}