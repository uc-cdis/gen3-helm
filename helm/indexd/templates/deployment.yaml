apiVersion: apps/v1
kind: Deployment
metadata:
  name: indexd-deployment
  labels:
    {{- include "indexd.labels" . | nindent 4 }}
    {{- if .Values.global.ddEnabled }}
    {{- include "common.datadogLabels" . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "indexd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "indexd.selectorLabels" . | nindent 8 }}
        {{- if .Values.global.ddEnabled }}
        {{- include "common.datadogLabels" . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "indexd.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: indexd
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
          image: "quay.io/cdis/indexd:feat_GPE-788"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if .Values.global.ddEnabled }}
            {{- include "common.datadogEnvVar" . | nindent 12 }}
            {{- end }}
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: indexd-dbcreds
                  key: host
                  optional: false  
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: indexd-dbcreds
                  key: username
                  optional: false 
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: indexd-dbcreds
                  key: password
                  optional: false
            - name: PGDB
              valueFrom:
                secretKeyRef:
                  name: indexd-dbcreds
                  key: database
                  optional: false
            - name: DBREADY
              valueFrom:
                secretKeyRef:
                  name: indexd-dbcreds
                  key: dbcreated
                  optional: false
            - name: DEFAULT_PREFIX
              value: {{ .Values.defaultPrefix }}
            {{- toYaml .Values.env | nindent 12  }}
          volumeMounts:
            {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
            - name: "wsgi-config"
              mountPath: "/indexd/deployment/wsgi/gunicorn.conf.py"
              subPath: gunicorn.conf.py
            {{- else }}
            - name: "uwsgi-config"
              mountPath: "/etc/uwsgi/uwsgi.ini"
              subPath: uwsgi.ini
            {{- end }}
            - name: "config-volume"
              readOnly: true
              mountPath: "/var/www/indexd/local_settings.py"
              subPath: "local_settings.py"
          ports:
            {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
            - name: app
              containerPort: 8000
              protocol: TCP
            {{- else }}
            - name: http
              containerPort: 80
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /_status
              {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
              port: app
              {{- else }}
              port: http
              {{- end }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /_status
              {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
              port: app
              {{- else }}
              port: http
              {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.secureImage.sidecar.enabled | default .Values.global.secureImage.sidecar.enabled }}
        - name: sidecar-nginx
          image: "{{ .Values.secureImage.sidecar.image }}:{{ .Values.secureImage.sidecar.tag }}"
          imagePullPolicy: {{ .Values.secureImage.sidecar.pullPolicy }}
          ports:
            - name: app
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /_status
              port: app
          volumeMounts:
            - name: "nginx-config"
              mountPath: "/etc/nginx/conf.d/default.conf"
              subPath: default.conf
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
