apiVersion: apps/v1
kind: Deployment
metadata:
  name: audit-deployment
  labels:
    {{- include "audit.labels" . | nindent 4 }}
    {{- if .Values.global.ddEnabled }}
    {{- include "common.datadogLabels" . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "audit.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "audit.selectorLabels" . | nindent 8 }}
        {{- if .Values.global.ddEnabled }}
        {{- include "common.datadogLabels" . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "audit.serviceAccountName" . }}
      volumes:
        - name: config-volume
          secret:
            secretName: "audit-g3auto"
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: audit
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /_status
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /_status
              port: 80
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- if .Values.global.ddEnabled }}
            {{- include "common.datadogEnvVar" . | nindent 12 }}
            {{- end }}
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: host
                  optional: false  
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: username
                  optional: false 
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: password
                  optional: false
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: database
                  optional: false
            - name: DBREADY
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: dbcreated
                  optional: false
            {{- toYaml .Values.env | nindent 12 }}
          volumeMounts:
              - name: "config-volume"
                readOnly: true
                mountPath: "/src/audit-service-config.yaml"
                subPath: "audit-service-config.yaml"
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      initContainers:
        - name: audit-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: host
                  optional: false  
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: username
                  optional: false 
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: password
                  optional: false
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: database
                  optional: false
            - name: DBREADY
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: dbcreated
                  optional: false
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command: ["/bin/bash"]
          args:
            - "-c"
            - |
              /env/bin/alembic upgrade head
          volumeMounts:
            - name: "config-volume"
              readOnly: true
              mountPath: "/src/audit-service-config.yaml"
              subPath: "audit-service-config.yaml"
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
