apiVersion: apps/v1
kind: Deployment
metadata:
  name: audit-deployment
  labels:
    {{- include "audit.labels" . | nindent 4 }}
    {{- if .Values.global.ddEnabled }}
    {{- include "common.datadogLabels" . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "audit.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "audit.selectorLabels" . | nindent 8 }}
        {{- if .Values.global.ddEnabled }}
        {{- include "common.datadogLabels" . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      {{- end }}
      serviceAccountName: {{ include "audit.serviceAccountName" . }}
      volumes:
        - name: config-volume
          secret:
            secretName: "audit-g3auto"
        - name: wsgi-config
          configMap:
            name: audit-wsgi
        - name: nginx-config
          configMap:
            name: audit-nginx-configmap
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: audit
          {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
          image: "quay.io/cdis/audit-service:feat_GPE-1113"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
            - name: app
              containerPort: 8000
              protocol: TCP
            {{- else }}
            - name: http
              containerPort: 80
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /_status
              {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
              port: app
              {{- else }}
              port: http
              {{- end }}
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /_status
              {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
              port: app
              {{- else }}
              port: http
              {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- if .Values.global.ddEnabled }}
            {{- include "common.datadogEnvVar" . | nindent 12 }}
            {{- end }}
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: host
                  optional: false  
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: username
                  optional: false 
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: password
                  optional: false
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: database
                  optional: false
            - name: DBREADY
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: dbcreated
                  optional: false
            {{- toYaml .Values.env | nindent 12 }}
          volumeMounts:
              - name: "config-volume"
                readOnly: true
                mountPath: "/src/audit-service-config.yaml"
                subPath: "audit-service-config.yaml"
              {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
              - name: "wsgi-config"
                mountPath: "/audit-service/deployment/wsgi/gunicorn.conf.py"
                subPath: gunicorn.conf.py
              {{- end }}
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- if .Values.secureImage.sidecar.enabled | default .Values.global.secureImage.sidecar.enabled }}
        - name: sidecar-nginx
          image: "{{ .Values.secureImage.sidecar.image }}:{{ .Values.secureImage.sidecar.tag }}"
          imagePullPolicy: {{ .Values.secureImage.sidecar.pullPolicy }}
          ports:
            - name: app
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /_status
              port: app
          volumeMounts:
            - name: "nginx-config"
              mountPath: "/etc/nginx/conf.d/default.conf"
              subPath: default.conf
        {{- end }}  
      initContainers:
        - name: audit-init
          {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
          image: "quay.io/cdis/audit-service:feat_GPE-1113"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: host
                  optional: false  
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: username
                  optional: false 
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: password
                  optional: false
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: database
                  optional: false
            - name: DBREADY
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: dbcreated
                  optional: false
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command: ["/bin/bash"]
          {{- if .Values.secureImage.enabled | default .Values.global.secureImage.enabled }}
          args:
            - "-c"
            - |
              alembic upgrade head
          {{- else }}
          args:
            - "-c"
            - |
              /env/bin/alembic upgrade head
          {{- end }}
          volumeMounts:
            - name: "config-volume"
              readOnly: true
              mountPath: "/src/audit-service-config.yaml"
              subPath: "audit-service-config.yaml"
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
