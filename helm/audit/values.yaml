# Default values for audit.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# -- (map) Global configuration options.
global:
  # -- (bool) Whether the deployment is for development purposes.
  dev: true
  # -- (map) Postgres database configuration.
  postgres:
    # -- (bool) Whether the database should be created.
    dbCreate: true
    # -- (map) Master credentials to postgres. This is going to be the default postgres server being used for each service, unless each service specifies their own postgres
    master:
      # -- (string) hostname of postgres server
      host:
      # -- (string) username of superuser in postgres. This is used to create or restore databases
      username: postgres
      # -- (string) password for superuser in postgres. This is used to create or restore databases
      password:
      # -- (string) Port for Postgres.
      port: "5432"
  # -- (string) Environment name. This should be the same as vpcname if you're doing an AWS deployment. Currently this is being used to share ALB's if you have multiple namespaces. Might be used other places too.
  environment: default
  # -- (string) Hostname for the deployment.
  hostname: localhost
  # -- (string) ARN of the reverse proxy certificate.
  revproxyArn: arn:aws:acm:us-east-1:123456:certificate
  # -- (string) URL of the data dictionary.
  dictionaryUrl: https://s3.amazonaws.com/dictionary-artifacts/datadictionary/develop/schema.json
  # -- (string) Portal application name.
  portalApp: gitops
  # -- (string) S3 bucket name for Kubernetes manifest files.
  kubeBucket: kube-gen3
  # -- (string) S3 bucket name for log files.
  logsBucket: logs-gen3
  # -- (bool) Whether to sync data from dbGaP.
  syncFromDbgap: false
  # -- (string) Path to the user.yaml file in S3.
  userYamlS3Path: s3://cdis-gen3-users/test/user.yaml
  # -- (bool) Whether public datasets are enabled.
  publicDataSets: true
  # -- (string) Access level for tiers. acceptable values for `tier_access_level` are: `libre`, `regular` and `private`. If omitted, by default common will be treated as `private`
  tierAccessLevel: libre
  # -- (bool) Whether network policies are enabled.
  netPolicy: true
  # -- (int) Number of dispatcher jobs.
  dispatcherJobNum: 10
  # -- (bool) Whether Datadog is enabled.
  ddEnabled: false

# -- (map) Postgres database configuration. If db does not exist in postgres cluster and dbCreate is set ot true then these databases will be created for you
postgres:
  # -- (bool) Whether the database should be created. Default to global.postgres.dbCreate
  dbCreate:
  # -- (string) Hostname for postgres server. This is a service override, defaults to global.postgres.host
  host:
  # -- (string) Database name for postgres. This is a service override, defaults to <serviceName>-<releaseName>
  database:
  # -- (string) Username for postgres. This is a service override, defaults to <serviceName>-<releaseName>
  username:
  # -- (string) Port for Postgres.
  port: "5432"
  # -- (string) Password for Postgres. Will be autogenerated if left empty.
  password:
  # -- (string) Will create a Database for the individual service to help with developing it.
  separate: false

# -- (map) Postgresql subchart settings if deployed separately option is set to "true".
# Disable persistence by default so we can spin up and down ephemeral environments
postgresql:
  primary:
    persistence:
      # -- (bool) Option to persist the dbs data.
      enabled: false

# -- (int) Number of desired replicas
replicaCount: 1

# -- (map) Docker image information.
image:
  # -- (string) The Docker image repository for the audit service
  repository: quay.io/cdis/audit-service
  # -- (string) When to pull the image. This value should be "Always" to ensure the latest image is used.
  pullPolicy: Always
  # -- (string) Overrides the image tag whose default is the chart appVersion.
  tag: "master"

# -- (list) Docker image pull secrets.
imagePullSecrets: []

# -- (string) Override the name of the chart. This can be used to provide a unique name for a chart
nameOverride: ""

# -- (string) Override the full name of the chart, which is used as the name of resources created by the chart
fullnameOverride: ""

# -- (map) Service account to use or create.
serviceAccount:
  # Specifies whether a service account should be created
  # -- (bool) Whether to create a service account
  create: true
  # Annotations to add to the service account
  annotations:
    # -- (string) The Amazon Resource Name (ARN) of the role to associate with the service account
    eks.amazonaws.com/role-arn:
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # -- (string) The name of the service account
  name: "audit-service-sa"

# -- (map) Annotations to add to the pod
podAnnotations: {}

# -- (map) Security context for the pod
podSecurityContext: {}

# -- (map) Security context for the containers in the pod
securityContext: {}

  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- (map) Configuration for the service
service:
  # -- (string) Type of service. Valid values are "ClusterIP", "NodePort", "LoadBalancer", "ExternalName".
  type: ClusterIP
  # -- (int) Port on which the service is exposed
  port: 80

# -- (map) Resource requests and limits for the containers in the pod
resources:
  # -- (map) The amount of resources that the container requests
  requests:
    # -- (string) The amount of CPU requested
    cpu: 0.1
    # -- (string) The amount of memory requested
    memory: 12Mi
  # -- (map) The maximum amount of resources that the container is allowed to use
  limits:
    # -- (string) The maximum amount of CPU the container can use
    cpu: 1.0
    # -- (string) The maximum amount of memory the container can use
    memory: 512Mi

# -- (map) Configuration for autoscaling the number of replicas
autoscaling:
  # -- (bool) Whether autoscaling is enabled or not
  enabled: false
  # -- (int) The minimum number of replicas to scale down to
  minReplicas: 1
  # -- (int) The maximum number of replicas to scale up to
  maxReplicas: 4
  # -- (int) The target CPU utilization percentage for autoscaling
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80


# -- (map) Node Selector for the pods
nodeSelector: {}

# -- (list) Tolerations for the pods
tolerations: []

# -- (map) Affinity to use for the deployment.
affinity:
  podAntiAffinity:
    # -- (map) Option for scheduling to be required or preferred.
    preferredDuringSchedulingIgnoredDuringExecution:
    # -- (int) Weight value for preferred scheduling.
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          # -- (list) Label key for match expression.
          - key: app
            # -- (string) Operation type for the match expression.
            operator: In
            # -- (list) Value for the match expression key.
            values:
            - audit
        # -- (string) Value for topology key label.
        topologyKey: "kubernetes.io/hostname"

# -- (list) Environment variables to pass to the container
env:
  - name: DEBUG
    value: "false"
  - name: ARBORIST_URL
    valueFrom:
      configMapKeyRef:
        name: manifest-global
        key: arborist_url
        optional: true

# -- (list) Volumes to attach to the container.
volumes: []

# -- (list) Volumes to mount to the container.
volumeMounts: []

# -- (list) Volumes to mount to the init container.
initVolumeMounts: []

# -- (list) Volumes to attach to the init container.
initEnv: {}

server:
  # -- (bool) Whether to pull logs from sqs queue.
  pull_from_queue: false
  # -- (bool) Whether to enable or disable debug mode.
  debug: false
  # -- (map) AWS SQS queue information.
  sqs:
    # -- (string) SQS queue AWS region.
    region: "us-east-1"
    # -- (string) The URL for the SQS queue.
    url: "http://sqs.com"
  # -- (map) AWS credentials to access SQS queue.
  AWS_CREDENTIALS: {}
    # cred1:
    #   aws_access_key_id:
    #   aws_secret_access_key:

api:
  # -- (int) Amount to time-box queries.
  QUERY_TIMEBOX_MAX_DAYS:

  # -- (int) The maximum number of entires the query endpoint will return.
  QUERY_PAGE_SIZE: 1000

  # -- (bool) Whether to return usernames in query responses and allow querying by username.
  QUERY_USERNAMES: true

# Values to determine the labels that are used for the deployment, pod, etc.
# -- (string) Valid options are "production" or "dev". If invalid option is set- the value will default to "dev".
release: "production"
# -- (string) Valid options are "true" or "false". If invalid option is set- the value will default to "false".
criticalService: "false"
# -- (string) Label to help organize pods and their use. Any value is valid, but use "_" or "-" to divide words.
partOf: "Logging"
# -- (map) Will completely override the selectorLabels defined in the common chart's _label_setup.tpl
selectorLabels:
# -- (map) Will completely override the commonLabels defined in the common chart's _label_setup.tpl
commonLabels:

# Values to configure datadog if ddEnabled is set to "true".
# -- (bool) If enabled, the Datadog Agent will automatically inject Datadog-specific metadata into your application logs.
datadogLogsInjection: true
# -- (bool) If enabled, the Datadog Agent will collect profiling data for your application using the Continuous Profiler. This data can be used to identify performance bottlenecks and optimize your application.
datadogProfilingEnabled: true
# -- (int) A value between 0 and 1, that represents the percentage of requests that will be traced. For example, a value of 0.5 means that 50% of requests will be traced.
datadogTraceSampleRate: 1
