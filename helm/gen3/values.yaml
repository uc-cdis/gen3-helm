# Default values for gen3.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # -- (map) AWS configuration
  aws:
    enabled: false
    # # -- (map) Credentials for AWS
    # account:
    #   # Prep move of these keys here.
    #   aws_access_key_id:
    #   aws_secret_access_key:

  # -- (bool) Deploys postgres/elasticsearch for dev
  dev: true
  postgres:
    # -- (bool) Whether the database create job should run.
    dbCreate: true
    master:
      # -- global postgres master username
      username: postgres
      # -- global postgres master password
      password:
      # -- global postgres master host
      host:
      # -- global postgres master port
      port: "5432"
  # -- (string) Environment name.
  # This should be the same as vpcname if you're doing an AWS deployment.
  # Currently this is being used to share ALB's if you have multiple namespaces in same cluster.
  environment: default
  # -- (string) Hostname for the deployment.
  hostname: localhost
  # -- (string) ARN of the reverse proxy certificate.
  revproxyArn: arn:aws:acm:us-east-1:123456:certificate
  # -- (string) URL of the data dictionary.
  dictionaryUrl: https://s3.amazonaws.com/dictionary-artifacts/datadictionary/develop/schema.json
  # -- (string) Portal application name.
  portalApp: gitops
  # -- (bool) Whether public datasets are enabled.
  publicDataSets: true
  # -- (string) Access level for tiers. acceptable values for `tier_access_level` are: `libre`, `regular` and `private`. If omitted, by default common will be treated as `private`
  tierAccessLevel: libre
  # -- (int) Only relevant if tireAccessLevel is set to "regular". Summary charts below this limit will not appear for aggregated data.
  tierAccessLimit: "1000"
  # -- (bool) Whether network policies are enabled.
  netPolicy: true
  # -- (int) Number of dispatcher jobs.
  dispatcherJobNum: 10
  # -- (bool) Whether Datadog is enabled.
  ddEnabled: false


# Dependancy Charts

ambassador:
  # -- (bool) Whether to deploy the ambassador subchart.
  enabled: true
  image:
    # -- (string) The Docker image repository for the ambassador service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:

arborist:
  # -- (bool) Whether to deploy the arborist subchart.
  enabled: true
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the arborist service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:

argo-wrapper:
  # -- (bool) Whether to deploy the argo-wrapper subchart.
  enabled: true
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the argo-wrapper service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:

audit:
  # -- (bool) Whether to deploy the audit subchart.
  enabled: true
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the audit service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:


aws-es-proxy:
  # -- (bool) Whether to deploy the aws-es-proxy subchart.
  enabled: false
  # -- (str) Elasticsearch endpoint in AWS
  esEndpoint: test.us-east-1.es.amazonaws.com
  # -- (map) Secret information
  secrets:
    # -- (str) AWS access key ID for aws-es-proxy
    awsAccessKeyId: ""
    # -- (str) AWS secret access key for aws-es-proxy
    awsSecretAccessKey: ""

etl:
  # -- (bool) Whether to deploy the etl subchart.
  enabled: true

fence:
  # -- (bool) Whether to deploy the fence subchart.
  enabled: true
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the fence service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:
  # -- (map) Configuration settings for Fence app
  FENCE_CONFIG:
  # -- (string) USER YAML. Passed in as a multiline string.
  USER_YAML:
  # -- (map) Configuration options for usersync cronjob.
  usersync:
    # -- (bool) Whether to run Fence usersync or not.
    usersync: false
    # -- (map) Secret information
    secrets:
      # -- (str) AWS access key ID for usersync S3 bucket
      awsAccessKeyId: ""
      # -- (str) AWS secret access key for usersync S3 bucket
      awsSecretAccessKey: ""
    # -- (string) The cron schedule expression to use in the usersync cronjob. Runs every 30 minutes by default.
    schedule: "*/30 * * * *"
    # -- (string) To set a custom image for pulling the user.yaml file from S3. Default is the Gen3 Awshelper image.
    custom_image:
    # -- (bool) Whether to sync data from dbGaP.
    syncFromDbgap: false
    # -- (bool) Force attempting a dbgap sync if "true", falls back on user.yaml
    addDbgap: false
    # -- (bool) Forces ONLY a dbgap sync if "true", IGNORING user.yaml
    onlyDbgap: false
    # -- (string) Path to the user.yaml file in S3.
    userYamlS3Path: s3://cdis-gen3-users/helm-test/user.yaml
    # -- (string) Slack webhook endpoint used with certain jobs.
    slack_webhook: None
    # -- (bool) Will echo what files we are seeing on dbgap ftp to Slack.
    slack_send_dbgap: false

guppy:
  # -- (bool) Whether to deploy the guppy subchart.
  enabled: false
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the guppy service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:

hatchery:
  # -- (bool) Whether to deploy the hatchery subchart.
  enabled: true
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the hatchery service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:

  hatchery:
    sidecarContainer:
      # -- (string) The maximum amount of CPU the sidecar container can use
      cpu-limit: '0.1'
      # -- (string) The maximum amount of memory the sidecar container can use
      memory-limit: 256Mi
      # -- (string) The sidecar image.
      image: quay.io/cdis/ecs-ws-sidecar:master
      # -- (map) Environment variables to pass to the sidecar container
      env:
        NAMESPACE: "{{ .Release.Namespace }}"
        HOSTNAME: "{{ .Values.global.hostname }}"
      # -- (list) Arguments to pass to the sidecare container.
      args: []
      # -- (list) Commands to run for the sidecar container.
      command:
      - "/bin/bash"
      - "./sidecar.sh"
      lifecycle-pre-stop:
      - su
      - "-c"
      - echo test
      - "-s"
      - "/bin/sh"
      - root
    containers:
      -
        # -- (int) port to proxy traffic to in docker contaniner
        target-port: 8888
        # -- (string) cpu limit of workspace container
        cpu-limit: '1.0'
        # -- (string) memory limit of workspace container
        memory-limit: 2Gi
        # -- (string) name of workspace
        name: "(Tutorials) Example Analysis Jupyter Lab Notebooks"
        # -- (string) docker image for workspace
        image: quay.io/cdis/heal-notebooks:combined_tutorials__latest
        # -- environment variables for workspace container
        env:
          FRAME_ANCESTORS: https://{{ .Values.global.hostname }}
        args:
        - "--NotebookApp.base_url=/lw-workspace/proxy/"
        - "--NotebookApp.default_url=/lab"
        - "--NotebookApp.password=''"
        - "--NotebookApp.token=''"
        - "--NotebookApp.shutdown_no_activity_timeout=5400"
        - "--NotebookApp.quit_button=False"
        command:
        - start-notebook.sh
        path-rewrite: "/lw-workspace/proxy/"
        use-tls: 'false'
        ready-probe: "/lw-workspace/proxy/"
        lifecycle-post-start:
        - "/bin/sh"
        - "-c"
        - export IAM=`whoami`; rm -rf /home/$IAM/pd/dockerHome; rm -rf /home/$IAM/pd/lost+found;
          ln -s /data /home/$IAM/pd/; true
        user-uid: 1000
        fs-gid: 100
        user-volume-location: "/home/jovyan/pd"
        gen3-volume-location: "/home/jovyan/.gen3"


indexd:
  # -- (bool) Whether to deploy the indexd subchart.
  enabled: true
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the indexd service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:
  # -- (string) the default prefix for indexd records
  defaultPrefix: "PREFIX/"


manifestservice:
  # -- (bool) Whether to deploy the manifest service subchart.
  enabled: true
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the manifest service service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:

metadata:
  # -- (bool) Whether to deploy the metadata subchart.
  enabled: true
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the metadata service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:

peregrine:
  # -- (bool) Whether to deploy the peregrine subchart.
  enabled: true
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the peregrine service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:

pidgin:
  # -- (bool) Whether to deploy the pidgin subchart.
  enabled: true
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the pidgin service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:

portal:
  # -- (bool) Whether to deploy the portal subchart.
  enabled: true
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the portal service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:
  # -- (map) GitOps configuration for portal
gitops:
  # -- (string) multiline string - gitops.json
  json:
  # -- (string) - favicon in base64
  favicon:
  # -- (string) - multiline string - gitops.css
  css:
  # -- (string) - logo in base64
  logo:
  # -- (string) - createdby.png - base64
  createdby:
  sponsors:


requestor:
  # -- (bool) Whether to deploy the requestor subchart.
  enabled: false
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the requestor service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:

revproxy:
  # -- (bool) Whether to deploy the revproxy subchart.
  enabled: true
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the revproxy service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:

  ingress:
    # -- (bool) Whether to create the custom revproxy ingress
    enabled: false
    # -- (string) The ingress class name.
    className: ""
    # -- (map) Annotations to add to the ingress.
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    # -- (list) Where to route the traffic.
    hosts:
      - host: chart-example.local
    # -- (list) To secure an Ingress by specifying a secret that contains a TLS private key and certificate.
    tls: []

sheepdog:
  # -- (bool) Whether to deploy the sheepdog subchart.
  enabled: true
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the sheepdog service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:

ssjdispatcher:
  # -- (bool) Whether to deploy the ssjdispatcher subchart.
  enabled: false
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the ssjdispatcher service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:


wts:
  # -- (bool) Whether to deploy the wts subchart.
  enabled: true
  # -- (map) Docker image information.
  image:
    # -- (string) The Docker image repository for the wts service.
    repository:
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag:

# -- (map) AWS credentials to access the db restore job S3 bucket
secrets:
  # -- (string) AWS access key.
  awsAccessKeyId: test
  # -- (string) AWS secret access key.
  awsSecretAccessKey: test

# Disable persistence by default so we can spin up and down ephemeral environments
postgresql:
  primary:
    persistence:
      # -- (bool) Option to persist the dbs data.
      enabled: false

elasticsearch:
  clusterName: gen3-elasticsearch
  maxUnavailable: 0
  singleNode: true
  replicas: 1
  clusterHealthCheckParams: "wait_for_status=yellow&timeout=1s"
  esConfig:
    elasticsearch.yml: |
      # Here we can add elasticsearch config
