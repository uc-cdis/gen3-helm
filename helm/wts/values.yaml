global:
  # Default values are for postgres deployed as a helm chart
  postgres:
    master:
      host: postgres-postgresql.postgres.svc.cluster.local
      username: postgres
      password: 
      port: 5432


# Whether or not to run database creation job
# The job is idempotant
db_creation: true
postgres:
  # If db does not exist in postgres cluster and db_creation is set ot true then these databases will be created for you 
  database: wts
  username: wts
  # If left empty it will be auto-generated
  password: 

    
# Default values for wts.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: quay.io/cdis/wts
  pullPolicy: Never
  # Overrides the image tag whose default is the chart appVersion.
  tag: "jqtest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""



hostname: localhost
oidc_client_id: 
oidc_client_secret: 

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podLabels:
  release: production
  public: "yes"
  netnolimit: "yes"
  userhelper: "yes"
  tags.datadoghq.com/service: "token-service"
  #GEN3_DATE_LABEL
  #GEN3_WTS_VERSION
  #GEN3_ENV_LABEL

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


service:
  type: ClusterIP
  httpPort: 80
  httpsPort: 443

resources: 
  requests:
    cpu: 0.1
    memory: 12Mi
  limits:
    cpu: 0.5
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

roleName: workspace-token-service

release: production

secrets:
  # wts-g3auto:
  #   appcreds.json: |
  #     {
  #       "wts_base_url": "https://HOSTNAME.REPLACE/wts/",
  #       "encryption_key": "ENCRYPTION KEY HERE",
  #       "secret_key": "SECRET KEY HERE",
  #       "fence_base_url": "https://HOSTNAME.REPLACE/user/",
  #       "oidc_client_id": "OIDC_CLIENT_ID.REPLACE",
  #       "oidc_client_sucrut": "OIDC_CLIENT_SECRET.REPLACE",
  #       "external_oidc": []
  #     }
  #   dbcreds.json: |
  #     {
  #       "db_host": "FENCE_DB_HOST.REPLACE",
  #       "db_username": "wts_default",
  #       "db_passwurd": "WTS_DB_PWD.REPLACE",
  #       "db_database": "wts_default"
  #     }

