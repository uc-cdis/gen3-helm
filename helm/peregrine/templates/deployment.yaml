apiVersion: apps/v1
kind: Deployment
metadata:
  name: peregrine-deployment
  labels:
    {{- include "peregrine.labels" . | nindent 4 }}
    {{- if .Values.global.ddEnabled }}
    {{- include "common.datadogLabels" . | nindent 4 }}
    {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "peregrine.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "peregrine.selectorLabels" . | nindent 8 }}
        {{- if .Values.global.ddEnabled }}
        {{- include "common.datadogLabels" . | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000    
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "peregrine.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if .Values.global.ddEnabled }}
            {{- include "common.datadogEnvVar" . | nindent 12 }}
            {{- end }}
            - name: FENCE_DB_USER
              valueFrom:
                secretKeyRef:
                  name: fence-dbcreds
                  key: username
                  optional: false
            - name: FENCE_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: fence-dbcreds
                  key: password
                  optional: false
            - name: FENCE_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: fence-dbcreds
                  key: host
                  optional: false
            - name: FENCE_DB_DBNAME
              valueFrom:
                secretKeyRef:
                  name: fence-dbcreds
                  key: database
                  optional: false
            - name: DBREADY_FENCE
              valueFrom:
                secretKeyRef:
                  name: fence-dbcreds
                  key: dbcreated
                  optional: false
            - name: FLASK_SECRET_KEY
              value: "TODO: FIX THIS!!!"
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: sheepdog-dbcreds
                  key: host
                  optional: false  
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: sheepdog-dbcreds
                  key: username
                  optional: false 
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: sheepdog-dbcreds
                  key: password
                  optional: false
            - name: PGDB
              valueFrom:
                secretKeyRef:
                  name: sheepdog-dbcreds
                  key: database
                  optional: false
            - name: DBREADY
              valueFrom:
                secretKeyRef:
                  name: sheepdog-dbcreds
                  key: dbcreated
                  optional: false
            - name: GEN3_UWSGI_TIMEOUT
              value: "600"
            - name: DICTIONARY_URL
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: dictionary_url
                  optional: true
            - name: PUBLIC_DATASETS
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: public_datasets
                  optional: true
            - name: INDEX_CLIENT_HOST
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: indexd_url
                  optional: true
            - name: GRAPHQL_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  name: manifest-peregrine
                  key: peregrine_timeout
                  optional: true
            - name: FENCE_URL
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: fence_url
                  optional: true
            - name: ARBORIST_URL
              value: {{ .Values.arborist_url }}
            - name: GEN3_SIDECAR
              value: "False"
            - name: CONF_HOSTNAME
              value: {{ .Values.global.hostname }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /_status?timeout=20
              port: 8000
            # peregrine can take forever to initialize
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /_status?timeout=2
              port: 8000
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.sidecar.enabled }}
        - name: sidecar-nginx
          image: {{ .Values.sidecar.image }}:{{ .Values.sidecar.tag }}
          imagePullPolicy: {{ .Values.sidecar.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /_status
              port: http
          volumeMounts:
            - name: "nginx-config"
              mountPath: "/etc/nginx/conf.d/default.conf"
              subPath: default.conf
        {{- end }}        
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
