# Default values for peregrine.
# This is a YAML-formatted file.
global:
  dev: true
  postgres:
    db_create: true
    master:
      host: 
      username: postgres
      password: 
      port: "5432"
  environment: default
  hostname: localhost
  revproxyArn: arn:aws:acm:us-east-1:123456:certificate
  dictionaryUrl: https://s3.amazonaws.com/dictionary-artifacts/datadictionary/develop/schema.json
  portalApp: gitops
  kubeBucket: kube-gen3
  logsBucket: logs-gen3
  syncFromDbgap: False
  userYamlS3Path: s3://cdis-gen3-users/test/user.yaml
  publicDataSets: true
  tierAccessLevel: libre
  netPolicy: on
  dispatcherJobNum: 10
  ddEnabled: false

postgres:
  db_create:
  host:
  # If db does not exist in postgres cluster and db_creation is set ot true then these databases will be created for you 
  database: peregrine
  username: peregrine
  port: "5432"
  # If left empty password will be auto-generated
  password:
  
replicaCount: 1

image:
  repository: quay.io/cdis/peregrine
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


env:



volumes:
- name: shared-data
  emptyDir: {}
- name: config-volume
  secret:
    secretName: "peregrine-secret"

volumeMounts:


